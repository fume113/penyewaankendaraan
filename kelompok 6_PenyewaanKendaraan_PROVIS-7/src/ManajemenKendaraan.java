import javax.swing.UIManager;
import com.jtattoo.plaf.graphite.GraphiteLookAndFeel;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.regex.*;
import javafx.scene.control.ComboBox;
import javax.swing.JOptionPane;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Rijal
 */
public class ManajemenKendaraan extends javax.swing.JFrame {

    /**
     * Creates new form ManajemenKendaraan
     */
    public ManajemenKendaraan() {
        initComponents();
        Dimension posisi = Toolkit.getDefaultToolkit().getScreenSize();


            int x = posisi.width / 2  - this.getSize().width / 2;
            int y = posisi.height / 2 - this.getSize().height / 2;

            this.setLocation(x, y);
    }
        protected void tema(){
                try{
                    UIManager.setLookAndFeel(new GraphiteLookAndFeel());
                }catch(UnsupportedLookAndFeelException ex){
                    ex.printStackTrace();
                }
            }
        static String Kode(int n){
                String Kode = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                            + "0123456789"
                            + "abcdefghijklmnopqrstuvxyz";
                
                StringBuilder sb = new StringBuilder(n);
                    for (int i = 0; i < n; i++) {
                        int index
                        = (int)(Kode.length()
                            * Math.random());
                            sb.append(Kode.charAt(index));
                    }
        return sb.toString();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelKendaraan = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        idKendaraan = new javax.swing.JTextField();
        jenisKendaraan = new javax.swing.JComboBox<>();
        namaKendaraan = new javax.swing.JComboBox<>();
        status = new javax.swing.JComboBox<>();
        hargaSewa = new javax.swing.JComboBox<>();
        noPolisi = new javax.swing.JTextField();
        kembali = new javax.swing.JButton();
        tambahData = new javax.swing.JButton();
        updateData = new javax.swing.JButton();
        hapusData = new javax.swing.JButton();
        refreshTabel = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tabelKendaraan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Jenis Kendaraan", "Nama Kendaraan", "No Polisi", "Harga Sewa", "Kode Tiket", "Status"
            }
        ));
        tabelKendaraan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelKendaraanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelKendaraan);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 809, -1));

        jLabel1.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        jLabel1.setText("Id");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 500, -1, -1));

        jLabel2.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        jLabel2.setText("Nama Kendaraan");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 560, -1, -1));

        jLabel3.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        jLabel3.setText("No Polisi");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 590, -1, -1));

        jLabel4.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        jLabel4.setText("Status");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 660, -1, -1));

        jLabel5.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        jLabel5.setText("Harga Sewa");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 620, -1, -1));

        jLabel7.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        jLabel7.setText("Jenis Kendaraan");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 530, -1, -1));

        idKendaraan.setEditable(false);
        idKendaraan.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(idKendaraan, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 500, 266, -1));

        jenisKendaraan.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        jenisKendaraan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pilih Jenis Kendaraan", "Mobil", "Motor" }));
        jenisKendaraan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jenisKendaraanActionPerformed(evt);
            }
        });
        getContentPane().add(jenisKendaraan, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 530, 270, -1));

        namaKendaraan.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        namaKendaraan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaKendaraanActionPerformed(evt);
            }
        });
        getContentPane().add(namaKendaraan, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 560, 270, -1));

        status.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tersedia", "Tidak Tersedia" }));
        getContentPane().add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 660, 270, -1));

        hargaSewa.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        hargaSewa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargaSewaActionPerformed(evt);
            }
        });
        getContentPane().add(hargaSewa, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 620, 270, -1));

        noPolisi.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        getContentPane().add(noPolisi, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 590, 266, -1));

        kembali.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        kembali.setText("Kembali");
        kembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kembaliActionPerformed(evt);
            }
        });
        getContentPane().add(kembali, new org.netbeans.lib.awtextra.AbsoluteConstraints(752, 760, -1, -1));

        tambahData.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        tambahData.setText("Tambah Data");
        tambahData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahDataActionPerformed(evt);
            }
        });
        getContentPane().add(tambahData, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 710, -1, -1));

        updateData.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        updateData.setText("Update Data");
        updateData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDataActionPerformed(evt);
            }
        });
        getContentPane().add(updateData, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 710, -1, -1));

        hapusData.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        hapusData.setText("Hapus Data");
        hapusData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusDataActionPerformed(evt);
            }
        });
        getContentPane().add(hapusData, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 710, -1, -1));

        refreshTabel.setFont(new java.awt.Font("Nirmala UI Semilight", 1, 14)); // NOI18N
        refreshTabel.setText("Tampilkan Tabel");
        refreshTabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTabelActionPerformed(evt);
            }
        });
        getContentPane().add(refreshTabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 450, 150, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon("F:\\1. Kuliah\\1.Unikom\\4. Semester 4\\4. Program Visual\\2. Tugas\\Tugas 5 Tugas Besar\\Background 850x800.jpg")); // NOI18N
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 800));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void kembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kembaliActionPerformed
        TampilanAdmin tampilanadmin = new TampilanAdmin();
        tampilanadmin.show();
        dispose();
    }//GEN-LAST:event_kembaliActionPerformed

    private void tambahDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahDataActionPerformed
        String JenisKendaraanValue = jenisKendaraan.getSelectedItem().toString();
        String NamaKendaraanValue = namaKendaraan.getSelectedItem().toString();
        String HargaSewaValue  = hargaSewa.getSelectedItem().toString();
        String StatusValue = status.getSelectedItem().toString();
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/db10120709penyewaankendaraan_travel","root","");
            String sql = "INSERT INTO `kendaraan` (`jenis_kendaraan`,`nama_kendaraan`,`no_polisi`,`harga_sewa`) VALUES ('"+jenisKendaraan.getSelectedItem()+"','"+namaKendaraan.getSelectedItem()+"','"+noPolisi.getText()+"','"+hargaSewa.getSelectedItem()+"')";
            PreparedStatement pst = con.prepareStatement(sql);
                     
                if(JenisKendaraanValue.equals("") || NamaKendaraanValue.equals("") || noPolisi.getText().equals("") || 
                        status.getSelectedItem().equals("")){
                    JOptionPane.showMessageDialog(this,"Mohon Masukan Semua Data!");
                }else{
                    pst.execute();
                    
                    Statement st = con.createStatement();
                    String sqi = "SELECT MAX(id_kendaraan) AS id_kendaraan FROM kendaraan ";
                    ResultSet rs = st.executeQuery(sqi);
                    
                    if(rs.next()){
                        String IdKendaraan  = rs.getString("id_kendaraan");
                        
                            String sqc = "INSERT INTO `tiket` (`id_kendaraan`,`kode_tiket`,`nama_kendaraan`,`status`) VALUES ('"+IdKendaraan+"',?,'"+namaKendaraan.getSelectedItem()+"','"+status.getSelectedItem()+"')";
                            PreparedStatement psc = con.prepareStatement(sqc);                   
                            psc.setString(1, Kode(10));                    
                            psc.execute();
                            JOptionPane.showMessageDialog(this, "Tambah Data Berhasil!");
                            
                idKendaraan.setText("");    
                jenisKendaraan.setSelectedItem("");
                namaKendaraan.setSelectedItem("");
                noPolisi.setText("");
                status.setSelectedItem("");                        
                    }
                }
                    
        }catch (Exception e){
                System.out.print(e.getMessage());
            }
    }//GEN-LAST:event_tambahDataActionPerformed

    private void updateDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDataActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)tabelKendaraan.getModel();
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/db10120709penyewaankendaraan_travel","root","");
            String sql = "UPDATE `kendaraan` SET `nama_kendaraan`='"+namaKendaraan.getSelectedItem()+"',`no_polisi`='"+noPolisi.getText()+"',`jenis_kendaraan`='"+jenisKendaraan.getSelectedItem()+"', `harga_sewa` = '"+hargaSewa.getSelectedItem()+"' WHERE `id_kendaraan` = '"+idKendaraan.getText()+"' ";
            PreparedStatement pst = con.prepareStatement(sql);
            
            String sqc = "UPDATE `tiket` SET `status` = '"+status.getSelectedItem()+"' WHERE `id_kendaraan` = '"+idKendaraan.getText()+"' ";
            PreparedStatement psc = con.prepareStatement(sqc);
            
            
        if(tabelKendaraan.getSelectedRowCount()==1){
            String IdKendaraan      = idKendaraan.getText();
            String JenisKendaraan   = jenisKendaraan.getSelectedItem().toString();
            String NamaKendaraan    = namaKendaraan.getSelectedItem().toString();
            String NoPolisi         = noPolisi.getText();
            String HargaSewa        = hargaSewa.getSelectedItem().toString();
            String Status           = status.getSelectedItem().toString();
            
            tblModel.setValueAt(IdKendaraan, tabelKendaraan.getSelectedRow(), 0);
            tblModel.setValueAt(JenisKendaraan, tabelKendaraan.getSelectedRow(), 1);
            tblModel.setValueAt(NamaKendaraan, tabelKendaraan.getSelectedRow(), 2);
            tblModel.setValueAt(NoPolisi, tabelKendaraan.getSelectedRow(), 3);
            tblModel.setValueAt(Status, tabelKendaraan.getSelectedRow(), 6);
            
            pst.execute();
            psc.execute();
            
            JOptionPane.showMessageDialog(this, "Update Data Berhasil!");
        }else{
            if(tabelKendaraan.getRowCount()==0){
                JOptionPane.showMessageDialog(this, "Tabel Kosong");
            }else{
                JOptionPane.showMessageDialog(this, "Harap Pilih Salah Satu Baris Dari Tabel!");
              }
        }
        }catch (Exception e){
                System.out.print(e.getMessage());
            } 
    }//GEN-LAST:event_updateDataActionPerformed

    private void hapusDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusDataActionPerformed
        DefaultTableModel tblModel = (DefaultTableModel)tabelKendaraan.getModel();
        
        
        try{
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/db10120709penyewaankendaraan_travel","root","");
            String sql = "DELETE FROM `kendaraan` WHERE `id_kendaraan` = '"+idKendaraan.getText()+"' ";
            PreparedStatement pst = con.prepareStatement(sql);
            
            String sqc = "DELETE FROM `tiket` WHERE `id_kendaraan` = '"+idKendaraan.getText()+"' ";
            PreparedStatement psc = con.prepareStatement(sqc);
            
                if(tabelKendaraan.getSelectedRowCount()==1){
                    tblModel.removeRow(tabelKendaraan.getSelectedRow());
                    pst.execute();
                    psc.execute();
                }else{
                      if(tabelKendaraan.getRowCount()==0){
                        JOptionPane.showMessageDialog(this, "Tabel Kosong");
                     }else{
                        JOptionPane.showMessageDialog(this, "Harap Pilih Salah Satu Baris Dari Tabel!");
                      }
                }
        }catch (Exception e){
                System.out.print(e.getMessage());
            } 
    }//GEN-LAST:event_hapusDataActionPerformed

    private void tabelKendaraanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelKendaraanMouseClicked
        DefaultTableModel tblModel = (DefaultTableModel)tabelKendaraan.getModel();
        
        String tblIdKendaraan     = tblModel.getValueAt(tabelKendaraan.getSelectedRow(), 0).toString();
        String tblJenisKendaraan  = tblModel.getValueAt(tabelKendaraan.getSelectedRow(), 1).toString();
        String tblNamaKendaraan   = tblModel.getValueAt(tabelKendaraan.getSelectedRow(), 2).toString();
        String tblNoPolisi        = tblModel.getValueAt(tabelKendaraan.getSelectedRow(), 3).toString();
        String tblHargaSewa       = tblModel.getValueAt(tabelKendaraan.getSelectedRow(), 4).toString();
        String tblStatus          = tblModel.getValueAt(tabelKendaraan.getSelectedRow(), 5).toString();
        
        idKendaraan.setText(tblIdKendaraan);
        jenisKendaraan.setSelectedItem(tblJenisKendaraan);
        namaKendaraan.setSelectedItem(tblNamaKendaraan);
        noPolisi.setText(tblNoPolisi);
        hargaSewa.setSelectedItem(tblHargaSewa);
        status.setSelectedItem(tblStatus);
    }//GEN-LAST:event_tabelKendaraanMouseClicked

    private void refreshTabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTabelActionPerformed
        tabelKendaraan.setModel(new DefaultTableModel(null,new String []{
        "Id","Jenis Kendaraan","Nama Kendaraan","No Polisi","Harga Sewa","Kode Tiket","Status"}));
        
        try{
                Class.forName("com.mysql.cj.jdbc.Driver");
                Connection con = DriverManager.getConnection("jdbc:mysql://localhost/db10120709penyewaankendaraan_travel","root","");
                
                Statement st = con.createStatement();
                String sql = "SELECT * FROM kendaraan";
                ResultSet rs = st.executeQuery(sql);
                
                Statement sc = con.createStatement();
                String sqc = "SELECT * FROM tiket";
                ResultSet rc = sc.executeQuery(sqc);                
                
                while(rs.next()){
                    if(rc.next()){
                    String IdKendaraan  = rs.getString("id_kendaraan");
                    String JenisKendaraan = rs.getString("jenis_kendaraan");
                    String NamaKendaraan = rs.getString("nama_kendaraan");
                    String NoPolisi = rs.getString("no_polisi");
                    String HargaSewa = String.valueOf(rs.getString("harga_sewa"));
                    String KodeTiket = String.valueOf(rc.getString("kode_tiket"));
                    String Status = rc.getString("status");
                    
                    String tbData[] = {IdKendaraan,JenisKendaraan,NamaKendaraan,NoPolisi,HargaSewa,KodeTiket,Status};
                    DefaultTableModel tblModel = (DefaultTableModel)tabelKendaraan.getModel();
                    
                    tblModel.addRow(tbData);
                    }
                }
                
                con.close();
            }catch (Exception e){
                System.out.print(e.getMessage());
            }
    }//GEN-LAST:event_refreshTabelActionPerformed

    private void jenisKendaraanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jenisKendaraanActionPerformed
        if (jenisKendaraan.getSelectedItem().equals("Mobil")){
            namaKendaraan.removeAllItems();
            namaKendaraan.setSelectedItem(null);
            
            namaKendaraan.addItem("Avanza");
            namaKendaraan.addItem("Xenia");
            namaKendaraan.addItem("Agya");
            namaKendaraan.addItem("Jazz");
            namaKendaraan.addItem("Brio");
        }else if (jenisKendaraan.getSelectedItem().equals("Motor")){
            namaKendaraan.removeAllItems();
            namaKendaraan.setSelectedItem(null);
            
            namaKendaraan.addItem("Beat");
            namaKendaraan.addItem("Scoopy");
            namaKendaraan.addItem("Nmax");
            namaKendaraan.addItem("Supra");
            namaKendaraan.addItem("Kharisma");
        }
    }//GEN-LAST:event_jenisKendaraanActionPerformed

    private void namaKendaraanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaKendaraanActionPerformed
        switch(namaKendaraan.getSelectedIndex()){
            case 0:
                hargaSewa.removeAllItems();
                hargaSewa.setSelectedItem(null);
                if(jenisKendaraan.getSelectedItem().equals("Mobil")){
                    hargaSewa.addItem("650000");
                } else
                hargaSewa.addItem("250000");
                break;
            case 1:
                hargaSewa.removeAllItems();
                hargaSewa.setSelectedItem(null);
                if(jenisKendaraan.getSelectedItem().equals("Mobil")){
                    hargaSewa.addItem("550000");
                } else
                hargaSewa.addItem("225000");
                break;
            case 2:
                hargaSewa.removeAllItems();
                hargaSewa.setSelectedItem(null);
                if(jenisKendaraan.getSelectedItem().equals("Mobil")){
                    hargaSewa.addItem("350000");
                } else
                hargaSewa.addItem("300000");
                break;
            case 3:
                hargaSewa.removeAllItems();
                hargaSewa.setSelectedItem(null);
                if(jenisKendaraan.getSelectedItem().equals("Mobil")){
                    hargaSewa.addItem("400000");
                } else
                hargaSewa.addItem("150000");
                break;
            case 4:
                hargaSewa.removeAllItems();
                hargaSewa.setSelectedItem(null);
                if(jenisKendaraan.getSelectedItem().equals("Mobil")){
                    hargaSewa.addItem("300000");
                } else
                hargaSewa.addItem("100000");
                break;                
        }
    }//GEN-LAST:event_namaKendaraanActionPerformed

    private void hargaSewaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hargaSewaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hargaSewaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManajemenKendaraan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManajemenKendaraan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManajemenKendaraan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManajemenKendaraan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        ManajemenKendaraan fitur = new ManajemenKendaraan();
        fitur.tema();
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManajemenKendaraan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton hapusData;
    private javax.swing.JComboBox<String> hargaSewa;
    private javax.swing.JTextField idKendaraan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jenisKendaraan;
    private javax.swing.JButton kembali;
    private javax.swing.JComboBox<String> namaKendaraan;
    private javax.swing.JTextField noPolisi;
    private javax.swing.JButton refreshTabel;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JTable tabelKendaraan;
    private javax.swing.JButton tambahData;
    private javax.swing.JButton updateData;
    // End of variables declaration//GEN-END:variables
}
